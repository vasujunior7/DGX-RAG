# ====================================================================
# üéØ HackRX API - Smart Retrieval System Configuration
# ====================================================================
# Essential environment variables for enhanced token efficiency

# ====================================================================
# ü§ñ API Keys
# ====================================================================

# Anthropic Claude API Key (REQUIRED for Smart Retrieval System)
# Used by: Enhanced smart retrieval with 50-70% token reduction
ANTHROPIC_API_KEY=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

# Google Gemini API Key (Legacy support)
GEMINI_API_KEY=AIzaSyAxVQQds400acw7X7553QnnWUSxolfY7-Q

# Groq API Key (Used by GOAT model - V1 API)
GROQ_API_KEY=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

# ====================================================================
# ‚öôÔ∏è Smart Retrieval System Settings
# ====================================================================

# Core Smart Retrieval Parameters
SMART_RETRIEVAL_ENABLED=true
SMART_RETRIEVAL_BASE_K=20
SMART_RETRIEVAL_RELEVANCE_THRESHOLD=0.3

# Dynamic Chunk Selection (based on question complexity)
SMART_RETRIEVAL_MAX_CHUNKS_SIMPLE=2      # Simple yes/no questions
SMART_RETRIEVAL_MAX_CHUNKS_MEDIUM=4      # Standard questions  
SMART_RETRIEVAL_MAX_CHUNKS_COMPLEX=6     # Complex multi-part questions

# Token Optimization
TOKEN_OPTIMIZATION_ENABLED=true
ESTIMATED_TOKENS_PER_CHUNK=200
TARGET_TOKEN_REDUCTION_PERCENTAGE=50

# ====================================================================
# üè• Legal Domain Intelligence (for better chunk relevance)
# ====================================================================

# Legal keyword categories for smart chunk selection
LEGAL_KEYWORDS_COVERAGE=cover,coverage,covered,benefit,eligible,included
LEGAL_KEYWORDS_EXCLUSIONS=exclude,exclusion,not covered,limitation,except  
LEGAL_KEYWORDS_CONDITIONS=condition,requirement,must,shall,provided that
LEGAL_KEYWORDS_WAITING_PERIOD=waiting period,wait,months,continuous coverage
LEGAL_KEYWORDS_CLAIMS=claim,reimburs,payment,settle,process
LEGAL_KEYWORDS_MEDICAL=medical,treatment,surgery,hospital,doctor,physician
LEGAL_KEYWORDS_PREMIUM=premium,payment,due,grace period,renewal
LEGAL_KEYWORDS_POLICY=policy,insured,policyholder,sum insured,schedule

# ====================================================================
# üéØ HackRX Competition Settings
# ====================================================================

# HackRX API endpoint and token
HACKRX_SUBMISSION_ENDPOINT=http://localhost:8000/api/v2/hackrx/run
HACKRX_AUTH_TOKEN=c39dcb0f04b2bb1826f03b76d21de9dad53cb114bd79c14ba03faf1c78bed067

# Test PDF for validation
TEST_PDF_URL=https://hackrx.blob.core.windows.net/assets/hackrx_6/policies/EDLHLGA23009V012223.pdf

# ====================================================================
# üìã What This Enables
# ====================================================================
# 
# ‚úÖ Smart Chunk Selection: 2-6 chunks instead of always 5
# ‚úÖ Token Efficiency: 50-70% reduction in Claude API usage  
# ‚úÖ Better Accuracy: Legal domain intelligence for relevance
# ‚úÖ Explainability: Question complexity analysis and reasoning
# ‚úÖ Rate Limit Solution: Significantly reduced API calls
#
# üöÄ Test your setup: python Model/AURA/test_smart_retrieval.py
# ==================================================================== 